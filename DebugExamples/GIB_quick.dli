# File Descr.GIB by JGM 
# This example calculates the frequency of tricks (GIB Style) for a 1NT north facing a 0-12 hcp south
# Note Gib always returns the tricks for N/S; the dealer program will give the E/W tricks if req'd
# GIB does take into account the opening leader though so you can compare N/S tricks by S vs N/S tricks by N
# If you really want to. That is to say that tricks(north, spades) might not be the same as tricks(south, spades).
# To compare 'right' siding the contract you could do everything below but also find all the tricks for S and compare 
# each North result to each South result and then find the Best Strain.

# This example is relatively slow: GIB takes its time. To Produce 100 hands on a 3.5GHz Intel core i7 (8 threads)
# takes about 40 seconds.

#IMPORTANT -- The GIB program wants the file "eval.dat" to be in the current working directory
# NOT the directory where the dealer binary is, nor where the GIB binary is, nor the directory where the dealer control file is
# but the current working directory at the time the dealer command is run.

# Update 2022/01/27 --- I don't think that this file actually calls GIB. The variable statements (nNtrix = tricks(north, notrumps) etc.
# do not actuall result in a call to GIB until that Variable is USED in a condition or an action statement.
# added the clause && ntrix > 6 as the first clause in the condition statement to force a call to GIB on EVERY deal. 

title "Tricks clause at end of condition statement; 5 calls to GIB when needed" 
generate 100000
produce 8

# These next statements calculate the maximum number of tricks North can take in any strain.
nNtrix = tricks(north, notrumps) 
nStrix = tricks(north, spades)
nHtrix = tricks(north, hearts)
nDtrix = tricks(north, diamonds)
nCtrix = tricks(north, clubs)

ntrixM = nStrix > nHtrix ? nStrix : nHtrix
ntrixm = nDtrix > nCtrix ? nDtrix : nCtrix
ntrixT = ntrixM > ntrixm ? ntrixM : ntrixm
ntrix  = ntrixT > nNtrix ? ntrixT : nNtrix

condition  
	shape(north, any 4333 + any 4432 + any 5332) and
		hcp(north)>=15 and hcp(north)<=18 and hcp(south) <= 12 && (ntrix > 6)
	
action 	printes("Nhcp=", hcp(north), \n)  


