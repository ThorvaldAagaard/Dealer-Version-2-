#	OPENING Decisions
#
# Last Edited: 4/20/2022
#
# dealer -s 1526308914 OpeningHands.txt
# dealer -s 1526308914 OpeningHands.txt > OpeningHands.pbn
#1)  Just HCP > 12
#
# HCP is less than 12, but
#2)  R20	The two longest suit plus HCP >=20
#2a) R21	The two longest suit plus HCP plus controls >=21
#2b) R22	The two longest suit plus HCP plus controls >=22 (Vul)
# 
# HCP is less than 12, but distribution supports it
# a=longest; b=2nd longest; d=shortest Suit lenght 
#3) Zar Bid=(2a+b-d) + HCP + Controls>=26
#

EP	= hcp(east)			CE = controls(east)		EL = loser(east) 			// EL is for Rule of 8

# 
#  Longest suits
#

LS4 =  4*shape ( east, any 4333 + any 4432 + any 4441)													//3 .3508
LS5 =  5*shape ( east, any 5440 + any 5431 + any 5422 + any 5332 + any 5521 + any 5530)                 //6 .4434
LS6 =  6*shape ( east, any 6610 + any 6511 + any 6520 + any 6430 + any 6421 + any 6331 + any 6322)      //7 .1654
LS7 =  7*shape ( east, any 7600 + any 7510 + any 7420 + any 7411 + any 7330 + any 7321 + any 7222)      //7 .0352
LS8 =  8*shape ( east, any 8500 + any 8410 + any 8320 + any 8311 + any 8221)                            //5 .0046
LS9 =  9*shape ( east, any 9400 + any 9310 + any 9220 + any 9211)                                       //4 .0004
#LS10= 10*shape ( east, any x300 + any x210 + any x111) 	very small p                                //3 .0000
#LS11= 11*shape ( east, any x200 + any x110)  				very small p                                //2 .0000
#LS12= 12*shape ( east, any x100)  				 			very small p                                //1 .0000
#LS13= 13*shape ( east, any x000)   				 		very small p                                //1 .0000

LSL = LS4 + LS5 + LS6 + LS7 + LS8 + LS9															//The lenght of longest suit
#		 + LS10 + LS11 + LS12 + LS13				 		very small p

#
#  2nd Longest suits
#

#L2S0= 0* shape(east, any x000)						 		very small p																		//1  .0000
#L2S1= 1* shape(east, any x100 + any x110 + any x111)		very small p																		//3  .0000
L2S2= 2* shape(east, any x200 + any x210 + any 9220 + any 9211 + any 8221 + any 7222)                                                           //6  .0073
L2S3= 3* shape(east, any x300 + any 9310 + any 8320 + any 8311 + any 7321 + any 7330 + any 6322 + any 6331 + any 5332 + any 4333)               //10 .3752
L2S4= 4* shape(east, any 9400 + any 8410 + any 7420 + any 7411 + any 6430 + any 6421 + any 5440 + any 5431 + any 5422 + any 4432 + any 4441)    //11 .5612
L2S5= 5* shape(east, any 8500 + any 7510 + any 6520 + any 6511 + any 5521 + any 5530)                                                           //6  .0553
L2S6= 6* shape(east, any 7600 + any 6610)                                                                                                       //2  .0007

L2SL= L2S2 + L2S3 + L2S4 + L2S5 + L2S6															//The lenght of the second longest suit
# 										+ L2S0 + L2S1 very small p
# 
#  Zar Shape Factor
#  Where a=longest; b=2nd longest; d=shortest Suit lenght 
#  SFxx=(2a+b-d)														// p
#
SF08=  8*shape (east, any 4333)											//0.105
SF10= 10*shape (east, any 4432)											//0.216
SF11= 11*shape (east, any 5332 + any 4441)       						//0.185
SF12= 12*shape (east, any 5422)       									//0.106
SF13= 13*shape (east, any 5431 + any 6322)       						//0.186
SF14= 14*shape (east, any 6331 + any 5521 + any 5440 + any 7222)       	//0.084
SF15= 15*shape (east, any 6421 + any 5530)       						//0.056
SF16= 16*shape (east, any 7321 + any 6430 + any 6511)				    //0.039
SF17= 17*shape (east, any 6520 + any 7411 + any 7330 + any 8221)		//0.015
SF18= 18*shape (east, any 7420 + any 8311 + any 6610)			     	//0.006
SF19= 19*shape (east, any 7510 + any 8320 + any 9211)				    //0.002
SF20= 20*shape (east, any 8410 + any 9220 + any 7600 + any x111)	    //0.001
#SF21= 21*shape (east, any 9310 + any 8500)						very small p	//0.000
#SF22= 22*shape (east, any x210 + any 9400)						very small p	//0.000
#SF23= 23*shape (east, any x300 + any x110)						very small p	//0.000
#SF24= 24*shape (east, any x200)						 		very small p	//0.000
#SF25= 25*shape (east, any x100)						 		very small p	//0.000
#SF26= 26*shape (east, any x000)						 		very small p	//0.000

ZShF = SF08 + SF10 + SF11 + SF12 + SF13 + SF14 + SF15 + SF16 + SF17 + SF18 + SF19 + SF20

# + SF21 + SF22 + SF23 + SF24 + SF25 + SF26						very small p

ZP	= EP + CE + ZShF

ZPB = (ZP>=26)

#--------------------------------------------------------------------------------------
R8	=	(LSL + L2SL - EL)
Rule = (EP + LSL + L2SL + CE)

OpenR20 = (EP<12) and (Rule >= 20)
OpenR21 = (EP<12) and (Rule >= 21)
OpenR22 = (EP<12) and (Rule >= 22)

 RO2X = OpenR22 ? 22 : (OpenR21 ? 21 : (OpenR20 ? 20 : 0))
 
#--------------------------------------------------------------------------------------
#		Std Openings
#---------------------------------------------------------------------------------------
# 1NT 15-17  or 2NT 20 21 balanced

Balanced= shape(east, any 4333 + any 4432 any 5332)					//including Majors; NO SINGLETON!!!!

O1NT= (hcp(east)>=15 and hcp(east)<=17) and Balanced
O2NT= (hcp(east)>=20 and hcp(east)<=21) and Balanced

ONT =  O1NT or O2NT

# Any 12-21

PointsinRange= hcp(east)>=12 and hcp(east)<=21

OSuit= (PointsinRange or RO2X or ZPB) and (ONT == 0)

# Majors
O1S	=	OSuit and (spades(east)>=5)
O1H	=	OSuit and ((hearts(east)>=5) and spades(east)<5)

# minors
NoM = (spades(east)<5 and hearts(east)<5)
O1D =	OSuit and NoM and (diamonds(east) >= clubs(east)) and  (diamonds(east) >= 3)
O1C =	OSuit and NoM and (clubs(east) > diamonds(east))

#	PASS

PPP	=	(PointsinRange == 0) and (RO2X == 0) and (ZPB == 0)

#Call=	ONT
#
Call=	OSuit
#Call=	PPP
#Call=	ONT or OSuit or PPP

#---------------------------------------------------------------------------------------
#
condition Call	

#---------------------------------------------------------------------------------------

generate 5000000 
produce 12

action 
#	printpbn,
#
printoneline,
#printes (";         Suits: HCP CTRL ZShF  ZP  ZPB  R8"," \n", \n),
#printes (";East Zar Param: ", EP,"    ", CE,"   ", ZShF,"   ", ZP,"   ", ZPB,"   ", R8, "  \n", \n),
#printes (";         Suits: CDHS 1NT 2NT or PASS"," \n", \n),
#printes (";  East May Bid: ", O1C, O1D, O1H, O1S,"  ",O1NT,"   ",  O2NT,"      ",PPP," \n", \n),
#printes (";  East May Use Rule of: ",RO2X,";  Or Zar Opening: ",ZPB, " \n", \n),
#
printes (";      ", \n),



